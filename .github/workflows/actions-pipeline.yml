name: CI for Ekart Application Build  & Deploy

on:
  push:
    branches:
      - "master"
      - "task/**"
  pull_request:
    branches:
      - "master"
      - "task/**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      push_image:
        description: "Do you want to push the Docker image?"
        required: true
        default: false
        type: boolean

permissions:
  id-token: write
  contents: read

jobs:
  containerize-maven-package:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: setup JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'maven'

      - name: Check Java & Maven Versions
        run: |
          java --version  
          mvn --version

      - name: Maven package
        run: |
          mvn clean package -DskipTests=true

      - name: ls -la target
        run: |
          ls -la
          ls -la target

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push Docker Image to Docker Hub
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: kcmchandramoulli/kcmekart:latest

      # - name: docker build&push
      #   run: |
      #     docker build -t kcmchandramoulli/kcmekart:latest .
      #     docker push kcmchandramoulli/kcmekart:latest



  deploy_to_AKS:
    runs-on: ubuntu-latest
    needs: containerize-maven-package
    if: ${{ inputs.push_image == true }}

    steps:
    - uses: actions/checkout@v4

    - name: Azure Login
      uses: Azure/login@v2.2.0
      with:
        # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
        # creds: # optional
        # ClientId of the Azure Service principal created.
        client-id: ${{ secrets.AZURE_CLIENT_ID }}  # optional
        # TenantId of the Azure Service principal created.
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}  # optional
        # Azure subscriptionId
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}  # optional
        auth-type: SERVICE_PRINCIPAL  # optional, default is SERVICE_PRINCIPAL
            
    - name: Azure Kubernetes set context
      uses: Azure/aks-set-context@v3
      with:
        # Resource Group Name
        resource-group: cicd-actions
        # AKS Cluster Name
        cluster-name: cicd-actions-aks
        # # AKS Cluster Subscription
        # subscription: # optional
        # # Get cluster admin credentials. Values: true or false
        # admin: # optional
        # # Enables kubelogin for non-admin user scenario. Values: true or false
        # use-kubelogin: # optional

    - name: Create secret in Kubernetes cluster
      uses: Azure/k8s-create-secret@v4.0
      with:
        # Choose the target Kubernetes namespace. If the namespace is not provided, the commands will run in the default namespace.
        namespace: default  # optional
        # Type of Kubernetes secret. Defaults to 'kubernetes.io/dockerconfigjson'.
        secret-type: docker-registry # optional, default is kubernetes.io/dockerconfigjson
        # Name of the secret. You can use this secret name in the Kubernetes YAML configuration file.
        secret-name: docker-image-pull-secret
        # Container Registry URL
        container-registry-url: https://index.docker.io/v1/
        container-registry-username: ${{ vars.DOCKERHUB_USERNAME }} # optional
        container-registry-password: ${{ secrets.DOCKERHUB_PASSWORD }}  # optional

    - name: Set up kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: latest

    - name: Deploy to Kubernetes cluster
      uses: Azure/k8s-deploy@v4.9
      with:
        manifests: deployment.yml
        images: kcmchandramoulli/kcmekart:latest
        imagepullsecrets: docker-image-pull-secret
        action: deploy